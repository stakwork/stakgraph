name: Stakgraph Unit Test
on:
  pull_request:
    branches:
      - main

jobs:
  run-test:
    runs-on: ubuntu-latest
    name: Run unit tests
    steps:
      - name: Enable docker.host.internal for Ubuntu
        run: |
          pwd && sudo bash -c 'echo "172.17.0.1 host.docker.internal" >> /etc/hosts'

      - name: Checkout from Github
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.1"

      - name: Verify Go Installation
        run: go version

      - name: Install gopls
        run: go install golang.org/x/tools/gopls@latest

      - name: Verify gopls Installation
        run: |
          echo "$HOME/go/bin" >> $GITHUB_PATH
          gopls version

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Verify Node.js Installation
        run: node -v

      - name: Install TypeScript and TypeScript LSP
        run: |
          npm install -g typescript typescript-language-server
          echo "$HOME/.npm-global/bin" >> $GITHUB_PATH

      - name: Verify TypeScript Installation
        run: |
          tsc --version
          typescript-language-server --version

      - name: Run rust test
        run: cargo test

      # Install Java, kotlin-language-server, and Ruby LSPs so USE_LSP=true tests can spawn language servers
      - name: Install OpenJDK 17 and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-17-jdk jq unzip curl

      - name: Set JAVA_HOME
        run: |
          echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV
          echo "/usr/lib/jvm/java-17-openjdk-amd64/bin" >> $GITHUB_PATH
          java -version

      - name: Install Kotlin compiler via SDKMAN (reliable method)
        run: |
          # Install SDKMAN for Kotlin installation
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install kotlin
          kotlin -version
          echo "$HOME/.sdkman/candidates/kotlin/current/bin" >> $GITHUB_PATH

      - name: Install kotlin-language-server (match Dockerfile)
        run: |
          set -eux

          sudo mkdir -p /opt/kotlin-language-server
          mkdir -p /tmp/kls
          echo "Downloading kotlin-language-server..."
          curl -fSL --create-dirs -o /tmp/kls/kls.zip "https://github.com/fwcd/kotlin-language-server/releases/latest/download/server.zip"
          unzip /tmp/kls/kls.zip -d /tmp/kls
          if [ -d /tmp/kls/server ]; then
            sudo cp -r /tmp/kls/server/* /opt/kotlin-language-server/
          else
            echo "ERROR: /tmp/kls/server directory not found after unzip"; ls -la /tmp/kls; exit 1
          fi
          if [ -f /opt/kotlin-language-server/bin/kotlin-language-server ]; then
            sudo ln -sf /opt/kotlin-language-server/bin/kotlin-language-server /usr/local/bin/kotlin-language-server
          elif [ -f /opt/kotlin-language-server/kotlin-language-server ]; then
            sudo ln -sf /opt/kotlin-language-server/kotlin-language-server /usr/local/bin/kotlin-language-server
          else
            echo "ERROR: kotlin-language-server executable not found in /opt/kotlin-language-server"; ls -la /opt/kotlin-language-server || true; ls -la /tmp/kls || true; exit 1
          fi
          sudo chmod +x /usr/local/bin/kotlin-language-server
          rm -rf /tmp/kls
          # Verify kotlin-language-server can run
          kotlin-language-server --version || echo "Version check failed but continuing"

      - name: Install Ruby and Ruby LSPs (match Dockerfile)
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby-full build-essential
          # Install common Ruby LSP servers and bundler into the runner user's home
          # Use --user-install to avoid creating root-owned files that the runner can't modify
          gem install --user-install --no-document ruby-lsp solargraph bundler
          # Add Ruby gem binaries to PATH
          echo "$HOME/.gem/ruby/$(ruby -e 'puts RUBY_VERSION[/^\d+\.\d+/]')/bin" >> $GITHUB_PATH
          echo "/usr/local/bin" >> $GITHUB_PATH
          echo "/var/lib/gems/$(ruby -e 'puts RUBY_VERSION[/^\d+\.\d+/]')/bin" >> $GITHUB_PATH
          solargraph --version || true
          ruby-lsp --version || true

      - name: Verify LSP installations are in PATH
        run: |
          echo "Current PATH: $PATH"
          which kotlin || echo "kotlin compiler not found in PATH"
          which kotlin-language-server || echo "kotlin-language-server not found in PATH"
          which solargraph || echo "solargraph not found in PATH"
          which ruby-lsp || echo "ruby-lsp not found in PATH"

      - name: Run rust test with LSP
        run: USE_LSP=true cargo test -- --test-threads=1